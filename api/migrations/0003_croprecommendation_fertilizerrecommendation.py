# Generated by Django 5.2.4 on 2025-07-16 13:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0002_user_role"),
    ]

    operations = [
        migrations.CreateModel(
            name="CropRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nitrogen", models.FloatField()),
                ("phosphorus", models.FloatField()),
                ("potassium", models.FloatField()),
                ("temperature", models.FloatField()),
                ("humidity", models.FloatField()),
                ("ph", models.FloatField()),
                ("rainfall", models.FloatField()),
                ("predicted_label", models.IntegerField(blank=True, null=True)),
                (
                    "predicted_crop",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("confidence_score", models.FloatField(blank=True, null=True)),
                ("explanation", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="crop_recommendations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FertilizerRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("temperature", models.FloatField()),
                ("humidity", models.FloatField()),
                ("moisture", models.FloatField()),
                ("nitrogen", models.FloatField()),
                ("phosphorus", models.FloatField()),
                ("potassium", models.FloatField()),
                ("predicted_label", models.IntegerField(blank=True, null=True)),
                (
                    "predicted_fertilizer",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("confidence_score", models.FloatField(blank=True, null=True)),
                ("explanation", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "crop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fertilizer_recommendations",
                        to="api.planttype",
                    ),
                ),
                (
                    "soil_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fertilizer_recommendations",
                        to="api.soiltype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fertilizer_recommendations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
